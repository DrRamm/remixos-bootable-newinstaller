#example: mount_hd sda
#REMIXOS_SYS_GB
get_hd()
{
    inst_hd=`mount | grep /mnt | awk '{ print $1 }' | xargs basename | sed "s/[0-9]$//g"`
    echo "inst_hd: $inst_hd"

    lsblk=`ls /sys/block | grep -v -E "loop|ram|sr|boot|rpmb"`
    for d in $lsblk; do
	if [ $d != $inst_hd ]; then
	    select_hd=$d
	fi
    done
    echo "select_hd: $select_hd"
    select_hd_id=$(( $(LC_CTYPE=C printf '%d' "'${select_hd:2:1}'") - 97 ))

    if ［ -z $select_hd ］; then
	dialog --title " Error " --msgbox "\n No hard disk is found!" 7 40
	install_failed=yes
    fi

}

#example: mount_hd sda
mount_hd()
{
    mountpoint -q /hd && umount /hd
    try_mount rw /dev/block/$1 /hd
    return $?
}

#example: delete_all_partitions sda
delete_all_partitions()
{
    dd if=/dev/zero of=/dev/${1} bs=2048 count=1 conv=notrunc
}

#example: create_mbr_partitions sda
create_mbr_partitions()
{
    # default system size : 10GB
    [ -z $REMIXOS_SYS_GB ] && REMIXOS_SYS_GB=10

    # to create the partitions programatically (rather than manually)
    # we're going to simulate the manual input to fdisk
    # The sed script strips off all the comments so that we can
    # document what we're doing in-line with the actual commands
    # Note that a blank line (commented as "defualt" will send a empty
    # line terminated with a newline to take the fdisk default.
    sed -e 's/\s*\([\+0-9a-zA-Z]*\).*/\1/' << EOF | busybox fdisk /dev/block/${1}
      o # clear the in memory partition table
      n # new partition BOOT
      p # primary partition
      1 # partition number 1
        # default - start at beginning of disk
      +100M # 100 MB boot parttion
      n # new partition SYSTEM
      p # primary partition
      2 # partion number 2
        # default, start immediately after preceding partition
      +${REMIXOS_SYS_GB}G  # SYSTEM
      n # new partition
      p # primary partition
      3 # partion number 2 DATA
        # default, start immediately after preceding partition
        # default, extend partition to end of disk
      a # make a partition bootable
      1 # bootable partition is partition 1 -- /dev/sda1
      p # print the in-memory partition table
      w # write the partition table
      q # and we're done
EOF

    if [ $? -ne 0 ]; then
        install_failed=yes
        dialog --title " Error " --msgbox "\n Couldn't create MBR partitions!" 7 33
        return 1
    fi

    while [ ! -e /dev/${1}3 ]; do
        sleep 1
    done
    mke2fs -t ext4 /dev/${1}1
    mke2fs -t ext4 -E lazy_itable_init=0,lazy_journal_init=0 /dev/${1}2
    mke2fs -t ext4 -E lazy_itable_init=0,lazy_journal_init=0 /dev/${1}3

    remixos_boot=${1}1
    remixos_sys=${1}2
    remixos_data=${1}3

    return 0
}

#example: create_gpr_partitions sda
create_gpt_partitions()
{
    delete_all_partitions $1

    # default system size : 10GB
    [ -z $REMIXOS_SYS_GB ] && REMIXOS_SYS_GB=10
    REMIXOS_SYS_BLOCK=`expr $REMIXOS_SYS_GB \* 1024 \* 1024 \* 2`
    REMIXOS_DATA_BEGIN=`expr $REMIXOS_SYS_BLOCK + 204834`

    ln /dev/block/${1} /dev/block/mmcblk0

    gpt_tables=/tmp/gpt.tbl
    cat <<EOF > $gpt_tables
partition_table=gpt
create -z /dev/block/mmcblk0
create /dev/block/mmcblk0
boot -p /dev/block/mmcblk0
reload /dev/block/mmcblk0
add -b 34 -s 204800 -t efi -u 80868086-8086-8086-8086-000000000000 -l EFI -T 0 -P 0 /dev/block/mmcblk0
add -b 204834 -s $REMIXOS_SYS_BLOCK -t data -u 80868086-8086-8086-8086-000000000001 -l system -T 0 -P 0 /dev/block/mmcblk0
add -b $REMIXOS_DATA_BEGIN -s \$calc(\$lba_end-16384) -t data -u 80868086-8086-8086-8086-000000000002 -l data -T 0 -P 0 /dev/block/mmcblk0
reload /dev/block/mmcblk0
EOF

    gfdisk $gpt_tables
    if [ $? -ne 0 ]; then
	install_failed=yes
	dialog --title " Error " --msgbox "\n Couldn't create GPT partitions!" 7 33
	return 1
    fi

    while [ ! -e /dev/${1}3 ]; do
        sleep 1
    done
    mkfs.vfat -n REMIXOS.EFI /dev/${1}1
    mke2fs -t ext4 -E lazy_itable_init=0,lazy_journal_init=0 /dev/${1}2
    mke2fs -t ext4 -E lazy_itable_init=0,lazy_journal_init=0 /dev/${1}3

    remixos_boot=${1}1
    remixos_sys=${1}2
    remixos_data=${1}3

    return 0
}

install_grub()
{
    mount_hd $remixos_boot
    cp -af /grub /hd
    rm -f /hd/boot/grub/stage1
    menulst=/hd/grub/menu.lst
    mkdir -p /hd/grub
    write_grub_file_legacy $menulst $asrc /dev/$remixos_data /dev/$remixos_sys 1 $select_hd_id
    echo "(hd$select_hd_id) /dev/$select_hd" > /hd/grub/device.map
    echo "setup (hd$select_hd_id) (hd$select_hd_id,0)" | grub --device-map /hd/grub/device.map
    if [ $? -ne 0 ]; then
        echo "error"
    fi
}

install_grub2()
{
    mount_hd $remixos_boot
    if [ $? -ne 0 ]; then
	install_failed=yes
	dialog --title " Error " --msgbox "\n Couldn't mount boot partition!" 7 40
	return 1
    fi

    mkdir -p /hd/efi/boot
    cp -f /grub2/efi/boot/bootx64.efi /hd/efi/boot
    cp -f /grub2/efi/boot/grubx64.efi /hd/efi/boot
    mkdir -p /hd/boot/grub
    grubcfg=/hd/boot/grub/grub.cfg
    write_grub_file $grubcfg $asrc /dev/$remixos_data /dev/$remixos_sys
    return 0
}

install_sys()
{
    mount_hd $remixos_sys
    if [ $? -ne 0 ]; then
	install_failed=yes
	dialog --title " Error " --msgbox "\n Couldn't mount system partition!" 7 40
	return 1
    fi

    files="mnt/$SRC/kernel mnt/$SRC/initrd.img mnt/$SRC/ramdisk.img"

    if [ -n "$DEBUG" ]; then
        sysimg="android/system"
        files="$files $sysimg"
    else
        if [ -e "mnt/$SRC/system.sfs" ]; then
            files="$files mnt/$SRC/system.sfs"
        else
            files="$files mnt/$SRC/system.img"
        fi
    fi


    size=0
    for s in `du -sk $files | awk '{print $1}'`; do
	size=$(($size+$s))
    done

    mkdir -p hd/$asrc
    cd hd/$asrc

    rm -rf system*
    ( ( cd /; find $files | $CPIO -H newc -o ) | pv -ns ${size}k | ( $CPIO -iud > /dev/null; echo $? > /tmp/result )) 2>&1 \
	| progress_bar "Installing Remix OS" "Expect to write $size KB..."
    result=$((`cat /tmp/result`*255))

    if [ $result -eq 0 ]; then
	for d in android mnt sfs ./$SRC; do
		[ -d $d ] && mv $d/* . && rmdir $d
	done
	chown 0.0 *
	for f in *; do
		[ -d $f ] || chmod 644 $f
	done
    fi

    REMIXOS_VERSION_INC=`awk -F= '/ro.build.version.incremental/ {print $2}' /android/system/build.prop`
    echo "ro.remixos.meta.installer=preinstall:$REMIXOS_VERSION_INC" >> remixos_meta.sys
    echo "ro.remixos.meta.install_type=hdd" >> remixos_meta.sys
    dialog --infobox "\n Synchronizing data to disk..." 5 40
    sync

    return 0
}

#example: install_hdd
install_mbr_hdd()
{
    cd /
    asrc=RemixOS
    install_grub && install_sys
}

#example: install_hdd
install_gpt_hdd()
{
    cd /
    asrc=RemixOS
    install_grub2 && install_sys
}

do_preinstall()
{
    echo "do_preinstall $INSTALL"

    get_hd

    if [ -n $select_hd ]; then
        if [ "$INSTALL" = "PREINSTALL_MBR" ]; then
            create_mbr_partitions $select_hd
            install_mbr_hdd
        else
            create_gpt_partitions $select_hd
            install_gpt_hdd
        fi

    fi

    if [ $install_failed = "yes" ]; then
        dialog --title " Error " --msgbox "\n RemixOS installation failed. \n" 7 42
    else
        dialog --title " Congratulations! " --msgbox "\n Remix OS has been installed successfully. \n" 7 50
    fi

    sync
    umount -a
    sync
    poweroff -f
}
